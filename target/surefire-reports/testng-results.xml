<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="87" passed="61" failed="26" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-30T10:19:56 MSK" name="Command line suite" finished-at="2021-12-30T10:21:48 MSK" duration-ms="112405">
    <groups>
    </groups>
    <test started-at="2021-12-30T10:19:56 MSK" name="Command line test" finished-at="2021-12-30T10:21:48 MSK" duration-ms="112405">
      <class name="WrongGetPostTest">
        <test-method signature="getPostWithPageEqual0()[pri:0, instance:WrongGetPostTest@7135ce0a]" started-at="2021-12-30T10:21:06 MSK" name="getPostWithPageEqual0" finished-at="2021-12-30T10:21:06 MSK" duration-ms="201" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Wrong "success" expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Wrong "success" expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetPostTest.getPostWithPageEqual0(WrongGetPostTest.java:88)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostWithPageEqual0 -->
        <test-method signature="getPostWithPerPageEqual0()[pri:0, instance:WrongGetPostTest@7135ce0a]" started-at="2021-12-30T10:21:06 MSK" name="getPostWithPerPageEqual0" finished-at="2021-12-30T10:21:06 MSK" duration-ms="202" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Wrong "success" expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Wrong "success" expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetPostTest.getPostWithPerPageEqual0(WrongGetPostTest.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostWithPerPageEqual0 -->
        <test-method signature="getPostWithoutPage()[pri:0, instance:WrongGetPostTest@7135ce0a]" started-at="2021-12-30T10:21:06 MSK" name="getPostWithoutPage" finished-at="2021-12-30T10:21:06 MSK" duration-ms="229" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetPostTest.getPostWithoutPage(WrongGetPostTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostWithoutPage -->
        <test-method signature="getPostWithoutPerPage()[pri:0, instance:WrongGetPostTest@7135ce0a]" started-at="2021-12-30T10:21:06 MSK" name="getPostWithoutPerPage" finished-at="2021-12-30T10:21:07 MSK" duration-ms="210" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetPostTest.getPostWithoutPerPage(WrongGetPostTest.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostWithoutPerPage -->
      </class> <!-- WrongGetPostTest -->
      <class name="WrongUploadFileTest">
        <test-method signature="uploadFileWithNonFormDataTest()[pri:0, instance:WrongUploadFileTest@1a21f43f]" started-at="2021-12-30T10:21:09 MSK" name="uploadFileWithNonFormDataTest" finished-at="2021-12-30T10:21:09 MSK" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uploadFileWithNonFormDataTest -->
      </class> <!-- WrongUploadFileTest -->
      <class name="ChangePostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:ChangePostTest@3c28e5b6]" started-at="2021-12-30T10:21:17 MSK" name="reg" finished-at="2021-12-30T10:21:17 MSK" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="changePostTest()[pri:0, instance:ChangePostTest@3c28e5b6]" started-at="2021-12-30T10:21:17 MSK" name="changePostTest" finished-at="2021-12-30T10:21:18 MSK" duration-ms="947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changePostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:ChangePostTest@3c28e5b6]" started-at="2021-12-30T10:21:18 MSK" name="delete" finished-at="2021-12-30T10:21:18 MSK" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- ChangePostTest -->
      <class name="SuccessRegistrationTest">
        <test-method signature="registrationTest()[pri:0, instance:SuccessRegistrationTest@6b0f266e]" started-at="2021-12-30T10:21:29 MSK" name="registrationTest" finished-at="2021-12-30T10:21:29 MSK" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationTest -->
      </class> <!-- SuccessRegistrationTest -->
      <class name="WrongCreatePostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:19:56 MSK" name="reg" finished-at="2021-12-30T10:19:57 MSK" duration-ms="837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="createPostWithEmptyDescription()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:19:57 MSK" name="createPostWithEmptyDescription" finished-at="2021-12-30T10:20:02 MSK" duration-ms="5274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPostWithEmptyDescription -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:02 MSK" name="delete" finished-at="2021-12-30T10:20:03 MSK" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:03 MSK" name="reg" finished-at="2021-12-30T10:20:03 MSK" duration-ms="290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="createPostWithEmptyImage()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:03 MSK" name="createPostWithEmptyImage" finished-at="2021-12-30T10:20:03 MSK" duration-ms="207" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongCreatePostTest.createPostWithEmptyImage(WrongCreatePostTest.java:101)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPostWithEmptyImage -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:03 MSK" name="delete" finished-at="2021-12-30T10:20:03 MSK" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:03 MSK" name="reg" finished-at="2021-12-30T10:20:03 MSK" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="createPostWithEmptyTitle()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:03 MSK" name="createPostWithEmptyTitle" finished-at="2021-12-30T10:20:04 MSK" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPostWithEmptyTitle -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:04 MSK" name="delete" finished-at="2021-12-30T10:20:04 MSK" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:04 MSK" name="reg" finished-at="2021-12-30T10:20:04 MSK" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="createPostWithoutDescription()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:04 MSK" name="createPostWithoutDescription" finished-at="2021-12-30T10:20:04 MSK" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPostWithoutDescription -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:04 MSK" name="delete" finished-at="2021-12-30T10:20:05 MSK" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:05 MSK" name="reg" finished-at="2021-12-30T10:20:05 MSK" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="createPostWithoutImage()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:05 MSK" name="createPostWithoutImage" finished-at="2021-12-30T10:20:05 MSK" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPostWithoutImage -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:05 MSK" name="delete" finished-at="2021-12-30T10:20:05 MSK" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:05 MSK" name="reg" finished-at="2021-12-30T10:20:06 MSK" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="createPostWithoutTitle()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:06 MSK" name="createPostWithoutTitle" finished-at="2021-12-30T10:20:06 MSK" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPostWithoutTitle -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:06 MSK" name="delete" finished-at="2021-12-30T10:20:06 MSK" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:06 MSK" name="reg" finished-at="2021-12-30T10:20:06 MSK" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="createPostWithoutToken()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:06 MSK" name="createPostWithoutToken" finished-at="2021-12-30T10:20:06 MSK" duration-ms="217" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongCreatePostTest.createPostWithoutToken(WrongCreatePostTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPostWithoutToken -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongCreatePostTest@78fe204a]" started-at="2021-12-30T10:20:06 MSK" name="delete" finished-at="2021-12-30T10:20:07 MSK" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- WrongCreatePostTest -->
      <class name="WrongLoginTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:27 MSK" name="reg" finished-at="2021-12-30T10:20:28 MSK" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="correctEmailWithoutPassword()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:28 MSK" name="correctEmailWithoutPassword" finished-at="2021-12-30T10:20:28 MSK" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctEmailWithoutPassword -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:28 MSK" name="delete" finished-at="2021-12-30T10:20:28 MSK" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:28 MSK" name="reg" finished-at="2021-12-30T10:20:28 MSK" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="emptyEmail()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:28 MSK" name="emptyEmail" finished-at="2021-12-30T10:20:34 MSK" duration-ms="5207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyEmail -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:34 MSK" name="delete" finished-at="2021-12-30T10:20:34 MSK" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:34 MSK" name="reg" finished-at="2021-12-30T10:20:34 MSK" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="emptyEmailAndPassword()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:34 MSK" name="emptyEmailAndPassword" finished-at="2021-12-30T10:20:34 MSK" duration-ms="188" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongLoginTest.emptyEmailAndPassword(WrongLoginTest.java:245)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyEmailAndPassword -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:34 MSK" name="delete" finished-at="2021-12-30T10:20:34 MSK" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:34 MSK" name="reg" finished-at="2021-12-30T10:20:35 MSK" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="emptyPassword()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:35 MSK" name="emptyPassword" finished-at="2021-12-30T10:20:35 MSK" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyPassword -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:35 MSK" name="delete" finished-at="2021-12-30T10:20:35 MSK" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:35 MSK" name="reg" finished-at="2021-12-30T10:20:36 MSK" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="incorrectEmail1()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:36 MSK" name="incorrectEmail1" finished-at="2021-12-30T10:20:36 MSK" duration-ms="202" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongLoginTest.incorrectEmail1(WrongLoginTest.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectEmail1 -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:36 MSK" name="delete" finished-at="2021-12-30T10:20:36 MSK" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:36 MSK" name="reg" finished-at="2021-12-30T10:20:36 MSK" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="incorrectEmail2()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:36 MSK" name="incorrectEmail2" finished-at="2021-12-30T10:20:36 MSK" duration-ms="186" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongLoginTest.incorrectEmail2(WrongLoginTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectEmail2 -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:36 MSK" name="delete" finished-at="2021-12-30T10:20:37 MSK" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:37 MSK" name="reg" finished-at="2021-12-30T10:20:37 MSK" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="incorrectEmail3()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:37 MSK" name="incorrectEmail3" finished-at="2021-12-30T10:20:37 MSK" duration-ms="188" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongLoginTest.incorrectEmail3(WrongLoginTest.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectEmail3 -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:37 MSK" name="delete" finished-at="2021-12-30T10:20:37 MSK" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:37 MSK" name="reg" finished-at="2021-12-30T10:20:38 MSK" duration-ms="280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="incorrectEmail4()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:38 MSK" name="incorrectEmail4" finished-at="2021-12-30T10:20:38 MSK" duration-ms="184" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongLoginTest.incorrectEmail4(WrongLoginTest.java:124)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectEmail4 -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:38 MSK" name="delete" finished-at="2021-12-30T10:20:38 MSK" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:38 MSK" name="reg" finished-at="2021-12-30T10:20:38 MSK" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="incorrectEmail5()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:38 MSK" name="incorrectEmail5" finished-at="2021-12-30T10:20:38 MSK" duration-ms="204" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongLoginTest.incorrectEmail5(WrongLoginTest.java:148)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incorrectEmail5 -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:38 MSK" name="delete" finished-at="2021-12-30T10:20:39 MSK" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:39 MSK" name="reg" finished-at="2021-12-30T10:20:39 MSK" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="userDoesNotExist()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:39 MSK" name="userDoesNotExist" finished-at="2021-12-30T10:20:44 MSK" duration-ms="5212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userDoesNotExist -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:44 MSK" name="delete" finished-at="2021-12-30T10:20:44 MSK" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:44 MSK" name="reg" finished-at="2021-12-30T10:20:45 MSK" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withoutEmail()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:45 MSK" name="withoutEmail" finished-at="2021-12-30T10:20:45 MSK" duration-ms="188" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongLoginTest.withoutEmail(WrongLoginTest.java:291)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutEmail -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:45 MSK" name="delete" finished-at="2021-12-30T10:20:45 MSK" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:45 MSK" name="reg" finished-at="2021-12-30T10:20:45 MSK" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withoutEmailAndPassword()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:45 MSK" name="withoutEmailAndPassword" finished-at="2021-12-30T10:20:45 MSK" duration-ms="185" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false],
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false],
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongLoginTest.withoutEmailAndPassword(WrongLoginTest.java:315)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutEmailAndPassword -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongLoginTest@2da81754]" started-at="2021-12-30T10:20:45 MSK" name="delete" finished-at="2021-12-30T10:20:46 MSK" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- WrongLoginTest -->
      <class name="WrongRegistrationTest">
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:07 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithEmptyAllFields()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="regWithEmptyAllFields" finished-at="2021-12-30T10:21:07 MSK" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithEmptyAllFields -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:07 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithEmptyEmail()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="regWithEmptyEmail" finished-at="2021-12-30T10:21:07 MSK" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithEmptyEmail -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:07 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithEmptyName()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="regWithEmptyName" finished-at="2021-12-30T10:21:07 MSK" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithEmptyName -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:07 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithEmptyPassword()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="regWithEmptyPassword" finished-at="2021-12-30T10:21:07 MSK" duration-ms="291" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Methods.wrongRegistration(Methods.java:47)
at WrongRegistrationTest.regWithEmptyPassword(WrongRegistrationTest.java:173)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithEmptyPassword -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:07 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithEmptyRole()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:07 MSK" name="regWithEmptyRole" finished-at="2021-12-30T10:21:08 MSK" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithEmptyRole -->
        <test-method signature="regWithExistingEmail()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="regWithExistingEmail" finished-at="2021-12-30T10:21:08 MSK" duration-ms="168" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at Methods.registration(Methods.java:36)
at WrongRegistrationTest.regWithExistingEmail(WrongRegistrationTest.java:245)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithExistingEmail -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:08 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:08 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithNullAllFields()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="regWithNullAllFields" finished-at="2021-12-30T10:21:08 MSK" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithNullAllFields -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:08 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithWrongName()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="regWithWrongName" finished-at="2021-12-30T10:21:08 MSK" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithWrongName -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:08 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithWrongRole()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="regWithWrongRole" finished-at="2021-12-30T10:21:08 MSK" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithWrongRole -->
        <test-method signature="regWithoutAvatar()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="regWithoutAvatar" finished-at="2021-12-30T10:21:09 MSK" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithoutAvatar -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:08 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:08 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:09 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:09 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithoutEmail()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:09 MSK" name="regWithoutEmail" finished-at="2021-12-30T10:21:09 MSK" duration-ms="186" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongRegistrationTest.regWithoutEmail(WrongRegistrationTest.java:127)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithoutEmail -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:09 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:09 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithoutName()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:09 MSK" name="regWithoutName" finished-at="2021-12-30T10:21:09 MSK" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithoutName -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:09 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:09 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithoutPassword()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:09 MSK" name="regWithoutPassword" finished-at="2021-12-30T10:21:09 MSK" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithoutPassword -->
        <test-method is-config="true" signature="createSoftAssert()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:09 MSK" name="createSoftAssert" finished-at="2021-12-30T10:21:09 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSoftAssert -->
        <test-method signature="regWithoutRole()[pri:0, instance:WrongRegistrationTest@9df564f]" started-at="2021-12-30T10:21:09 MSK" name="regWithoutRole" finished-at="2021-12-30T10:21:09 MSK" duration-ms="183" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongRegistrationTest.regWithoutRole(WrongRegistrationTest.java:235)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regWithoutRole -->
      </class> <!-- WrongRegistrationTest -->
      <class name="GetFileTest">
        <test-method signature="getFileTest()[pri:0, instance:GetFileTest@47272cd3]" started-at="2021-12-30T10:20:24 MSK" name="getFileTest" finished-at="2021-12-30T10:20:25 MSK" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileTest -->
      </class> <!-- GetFileTest -->
      <class name="WrongDeletePostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongDeletePostTest@66749eea]" started-at="2021-12-30T10:20:59 MSK" name="reg" finished-at="2021-12-30T10:20:59 MSK" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="deletePostTestWithWrongId()[pri:0, instance:WrongDeletePostTest@66749eea]" started-at="2021-12-30T10:20:59 MSK" name="deletePostTestWithWrongId" finished-at="2021-12-30T10:20:59 MSK" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePostTestWithWrongId -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongDeletePostTest@66749eea]" started-at="2021-12-30T10:20:59 MSK" name="delete" finished-at="2021-12-30T10:21:00 MSK" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongDeletePostTest@66749eea]" started-at="2021-12-30T10:21:00 MSK" name="reg" finished-at="2021-12-30T10:21:00 MSK" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="deletePostTestWithoutToken()[pri:0, instance:WrongDeletePostTest@66749eea]" started-at="2021-12-30T10:21:00 MSK" name="deletePostTestWithoutToken" finished-at="2021-12-30T10:21:05 MSK" duration-ms="5639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePostTestWithoutToken -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongDeletePostTest@66749eea]" started-at="2021-12-30T10:21:05 MSK" name="delete" finished-at="2021-12-30T10:21:06 MSK" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- WrongDeletePostTest -->
      <class name="GetPostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:GetPostTest@7d0cd23c]" started-at="2021-12-30T10:21:27 MSK" name="reg" finished-at="2021-12-30T10:21:27 MSK" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:GetPostTest@7d0cd23c]" started-at="2021-12-30T10:21:27 MSK" name="createPost" finished-at="2021-12-30T10:21:27 MSK" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getPostTest()[pri:0, instance:GetPostTest@7d0cd23c]" started-at="2021-12-30T10:21:27 MSK" name="getPostTest" finished-at="2021-12-30T10:21:27 MSK" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:GetPostTest@7d0cd23c]" started-at="2021-12-30T10:21:27 MSK" name="delete" finished-at="2021-12-30T10:21:28 MSK" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:GetPostTest@7d0cd23c]" started-at="2021-12-30T10:21:28 MSK" name="reg" finished-at="2021-12-30T10:21:28 MSK" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:GetPostTest@7d0cd23c]" started-at="2021-12-30T10:21:28 MSK" name="createPost" finished-at="2021-12-30T10:21:28 MSK" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getUserPostTest()[pri:0, instance:GetPostTest@7d0cd23c]" started-at="2021-12-30T10:21:28 MSK" name="getUserPostTest" finished-at="2021-12-30T10:21:28 MSK" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserPostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:GetPostTest@7d0cd23c]" started-at="2021-12-30T10:21:28 MSK" name="delete" finished-at="2021-12-30T10:21:29 MSK" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- GetPostTest -->
      <class name="WrongGetUserPostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:47 MSK" name="reg" finished-at="2021-12-30T10:20:47 MSK" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:47 MSK" name="createPost" finished-at="2021-12-30T10:20:47 MSK" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getPostTest()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:47 MSK" name="getPostTest" finished-at="2021-12-30T10:20:48 MSK" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:48 MSK" name="delete" finished-at="2021-12-30T10:20:48 MSK" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:48 MSK" name="reg" finished-at="2021-12-30T10:20:48 MSK" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:48 MSK" name="createPost" finished-at="2021-12-30T10:20:48 MSK" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getUserPostTest()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:48 MSK" name="getUserPostTest" finished-at="2021-12-30T10:20:49 MSK" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserPostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:49 MSK" name="delete" finished-at="2021-12-30T10:20:49 MSK" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:49 MSK" name="reg" finished-at="2021-12-30T10:20:49 MSK" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:49 MSK" name="createPost" finished-at="2021-12-30T10:20:49 MSK" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getUserPostWithPageEqual0()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:49 MSK" name="getUserPostWithPageEqual0" finished-at="2021-12-30T10:20:55 MSK" duration-ms="5198" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Wrong "success" expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Wrong "success" expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetUserPostTest.getUserPostWithPageEqual0(WrongGetUserPostTest.java:109)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserPostWithPageEqual0 -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:55 MSK" name="delete" finished-at="2021-12-30T10:20:55 MSK" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:55 MSK" name="reg" finished-at="2021-12-30T10:20:55 MSK" duration-ms="277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:55 MSK" name="createPost" finished-at="2021-12-30T10:20:55 MSK" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getUserPostWithPerPageEqual0()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:55 MSK" name="getUserPostWithPerPageEqual0" finished-at="2021-12-30T10:20:55 MSK" duration-ms="195" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Wrong "success" expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Wrong "success" expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetUserPostTest.getUserPostWithPerPageEqual0(WrongGetUserPostTest.java:138)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserPostWithPerPageEqual0 -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:55 MSK" name="delete" finished-at="2021-12-30T10:20:56 MSK" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:56 MSK" name="reg" finished-at="2021-12-30T10:20:56 MSK" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:56 MSK" name="createPost" finished-at="2021-12-30T10:20:56 MSK" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getUserPostWithoutPage()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:56 MSK" name="getUserPostWithoutPage" finished-at="2021-12-30T10:20:56 MSK" duration-ms="201" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetUserPostTest.getUserPostWithoutPage(WrongGetUserPostTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserPostWithoutPage -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:56 MSK" name="delete" finished-at="2021-12-30T10:20:57 MSK" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:57 MSK" name="reg" finished-at="2021-12-30T10:20:57 MSK" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:57 MSK" name="createPost" finished-at="2021-12-30T10:20:57 MSK" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getUserPostWithoutPerPage()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:57 MSK" name="getUserPostWithoutPerPage" finished-at="2021-12-30T10:20:57 MSK" duration-ms="203" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetUserPostTest.getUserPostWithoutPerPage(WrongGetUserPostTest.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserPostWithoutPerPage -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:57 MSK" name="delete" finished-at="2021-12-30T10:20:57 MSK" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:57 MSK" name="reg" finished-at="2021-12-30T10:20:58 MSK" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:58 MSK" name="createPost" finished-at="2021-12-30T10:20:58 MSK" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getUserPostWithoutToken()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:58 MSK" name="getUserPostWithoutToken" finished-at="2021-12-30T10:20:58 MSK" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserPostWithoutToken -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetUserPostTest@4e375bba]" started-at="2021-12-30T10:20:58 MSK" name="delete" finished-at="2021-12-30T10:20:58 MSK" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- WrongGetUserPostTest -->
      <class name="UploadFileTest">
        <test-method signature="uploadFileTest()[pri:0, instance:UploadFileTest@7f0a133d]" started-at="2021-12-30T10:21:09 MSK" name="uploadFileTest" finished-at="2021-12-30T10:21:10 MSK" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uploadFileTest -->
      </class> <!-- UploadFileTest -->
      <class name="CreatePostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:CreatePostTest@3a00b15d]" started-at="2021-12-30T10:20:25 MSK" name="reg" finished-at="2021-12-30T10:20:25 MSK" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="createPostTest()[pri:0, instance:CreatePostTest@3a00b15d]" started-at="2021-12-30T10:20:25 MSK" name="createPostTest" finished-at="2021-12-30T10:20:25 MSK" duration-ms="370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:CreatePostTest@3a00b15d]" started-at="2021-12-30T10:20:25 MSK" name="delete" finished-at="2021-12-30T10:20:26 MSK" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- CreatePostTest -->
      <class name="SuccessAuthorizationTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:SuccessAuthorizationTest@712ac7e6]" started-at="2021-12-30T10:20:07 MSK" name="reg" finished-at="2021-12-30T10:20:07 MSK" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="successAuthorizationTest()[pri:0, instance:SuccessAuthorizationTest@712ac7e6]" started-at="2021-12-30T10:20:07 MSK" name="successAuthorizationTest" finished-at="2021-12-30T10:20:07 MSK" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successAuthorizationTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:SuccessAuthorizationTest@712ac7e6]" started-at="2021-12-30T10:20:07 MSK" name="delete" finished-at="2021-12-30T10:20:08 MSK" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- SuccessAuthorizationTest -->
      <class name="DeleteUserTest">
        <test-method signature="deleteUser()[pri:0, instance:DeleteUserTest@241fbec]" started-at="2021-12-30T10:21:10 MSK" name="deleteUser" finished-at="2021-12-30T10:21:10 MSK" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="deleteWithEmptyToken()[pri:0, instance:DeleteUserTest@241fbec]" started-at="2021-12-30T10:21:10 MSK" name="deleteWithEmptyToken" finished-at="2021-12-30T10:21:16 MSK" duration-ms="5662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteWithEmptyToken -->
        <test-method signature="deleteWithoutToken()[pri:0, instance:DeleteUserTest@241fbec]" started-at="2021-12-30T10:21:16 MSK" name="deleteWithoutToken" finished-at="2021-12-30T10:21:17 MSK" duration-ms="820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteWithoutToken -->
      </class> <!-- DeleteUserTest -->
      <class name="ChangeUserInfoTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:ChangeUserInfoTest@231df705]" started-at="2021-12-30T10:21:29 MSK" name="reg" finished-at="2021-12-30T10:21:29 MSK" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="changeUserInfoSuccess()[pri:0, instance:ChangeUserInfoTest@231df705]" started-at="2021-12-30T10:21:29 MSK" name="changeUserInfoSuccess" finished-at="2021-12-30T10:21:30 MSK" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeUserInfoSuccess -->
        <test-method is-config="true" signature="delete()[pri:0, instance:ChangeUserInfoTest@231df705]" started-at="2021-12-30T10:21:30 MSK" name="delete" finished-at="2021-12-30T10:21:30 MSK" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- ChangeUserInfoTest -->
      <class name="AllNewsPageGetTest">
        <test-method signature="allNewsPageGetTest()[pri:0, instance:AllNewsPageGetTest@704067c6]" started-at="2021-12-30T10:20:46 MSK" name="allNewsPageGetTest" finished-at="2021-12-30T10:20:46 MSK" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allNewsPageGetTest -->
      </class> <!-- AllNewsPageGetTest -->
      <class name="WrongGetFileTest">
        <test-method signature="getFileWithoutFileNameTest()[pri:0, instance:WrongGetFileTest@2180e789]" started-at="2021-12-30T10:20:58 MSK" name="getFileWithoutFileNameTest" finished-at="2021-12-30T10:20:59 MSK" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileWithoutFileNameTest -->
      </class> <!-- WrongGetFileTest -->
      <class name="WrongGetSpecificPostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:18 MSK" name="reg" finished-at="2021-12-30T10:21:19 MSK" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:19 MSK" name="createPost" finished-at="2021-12-30T10:21:19 MSK" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getPostTest()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:19 MSK" name="getPostTest" finished-at="2021-12-30T10:21:19 MSK" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:19 MSK" name="delete" finished-at="2021-12-30T10:21:19 MSK" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:19 MSK" name="reg" finished-at="2021-12-30T10:21:19 MSK" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:19 MSK" name="createPost" finished-at="2021-12-30T10:21:20 MSK" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getUserPostTest()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:20 MSK" name="getUserPostTest" finished-at="2021-12-30T10:21:20 MSK" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserPostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:20 MSK" name="delete" finished-at="2021-12-30T10:21:20 MSK" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:20 MSK" name="reg" finished-at="2021-12-30T10:21:20 MSK" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:20 MSK" name="createPost" finished-at="2021-12-30T10:21:21 MSK" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getPostWithoutPageTest()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:21 MSK" name="getPostWithoutPageTest" finished-at="2021-12-30T10:21:26 MSK" duration-ms="5266" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetSpecificPostTest.getPostWithoutPageTest(WrongGetSpecificPostTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostWithoutPageTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:26 MSK" name="delete" finished-at="2021-12-30T10:21:26 MSK" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:26 MSK" name="reg" finished-at="2021-12-30T10:21:26 MSK" duration-ms="277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method is-config="true" signature="createPost()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:26 MSK" name="createPost" finished-at="2021-12-30T10:21:26 MSK" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost -->
        <test-method signature="getPostWithoutPerPageTest()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:26 MSK" name="getPostWithoutPerPageTest" finished-at="2021-12-30T10:21:27 MSK" duration-ms="191" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false],
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false],
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongGetSpecificPostTest.getPostWithoutPerPageTest(WrongGetSpecificPostTest.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostWithoutPerPageTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongGetSpecificPostTest@1a2ac487]" started-at="2021-12-30T10:21:27 MSK" name="delete" finished-at="2021-12-30T10:21:27 MSK" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- WrongGetSpecificPostTest -->
      <class name="WrongChangePostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:30 MSK" name="reg" finished-at="2021-12-30T10:21:30 MSK" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="wrongChangePostTestWithEmptyDescription()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:30 MSK" name="wrongChangePostTestWithEmptyDescription" finished-at="2021-12-30T10:21:30 MSK" duration-ms="534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongChangePostTestWithEmptyDescription -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:30 MSK" name="delete" finished-at="2021-12-30T10:21:31 MSK" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:31 MSK" name="reg" finished-at="2021-12-30T10:21:31 MSK" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="wrongChangePostTestWithEmptyTags()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:31 MSK" name="wrongChangePostTestWithEmptyTags" finished-at="2021-12-30T10:21:37 MSK" duration-ms="5551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongChangePostTestWithEmptyTags -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:37 MSK" name="delete" finished-at="2021-12-30T10:21:37 MSK" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:37 MSK" name="reg" finished-at="2021-12-30T10:21:37 MSK" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="wrongChangePostTestWithEmptyTitle()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:37 MSK" name="wrongChangePostTestWithEmptyTitle" finished-at="2021-12-30T10:21:38 MSK" duration-ms="888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongChangePostTestWithEmptyTitle -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:38 MSK" name="delete" finished-at="2021-12-30T10:21:38 MSK" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:38 MSK" name="reg" finished-at="2021-12-30T10:21:39 MSK" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="wrongChangePostTestWithWrongId()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:39 MSK" name="wrongChangePostTestWithWrongId" finished-at="2021-12-30T10:21:39 MSK" duration-ms="366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongChangePostTestWithWrongId -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:39 MSK" name="delete" finished-at="2021-12-30T10:21:39 MSK" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:39 MSK" name="reg" finished-at="2021-12-30T10:21:39 MSK" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="wrongChangePostTestWithoutDescription()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:39 MSK" name="wrongChangePostTestWithoutDescription" finished-at="2021-12-30T10:21:40 MSK" duration-ms="586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongChangePostTestWithoutDescription -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:40 MSK" name="delete" finished-at="2021-12-30T10:21:40 MSK" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:40 MSK" name="reg" finished-at="2021-12-30T10:21:40 MSK" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="wrongChangePostTestWithoutImage()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:40 MSK" name="wrongChangePostTestWithoutImage" finished-at="2021-12-30T10:21:41 MSK" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongChangePostTestWithoutImage -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:41 MSK" name="delete" finished-at="2021-12-30T10:21:41 MSK" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:41 MSK" name="reg" finished-at="2021-12-30T10:21:42 MSK" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="wrongChangePostTestWithoutTitle()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:42 MSK" name="wrongChangePostTestWithoutTitle" finished-at="2021-12-30T10:21:47 MSK" duration-ms="5551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongChangePostTestWithoutTitle -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:47 MSK" name="delete" finished-at="2021-12-30T10:21:47 MSK" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:47 MSK" name="reg" finished-at="2021-12-30T10:21:48 MSK" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="wrongChangePostTestWithoutToken()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:48 MSK" name="wrongChangePostTestWithoutToken" finished-at="2021-12-30T10:21:48 MSK" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongChangePostTestWithoutToken -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangePostTest@5f5297e3]" started-at="2021-12-30T10:21:48 MSK" name="delete" finished-at="2021-12-30T10:21:48 MSK" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- WrongChangePostTest -->
      <class name="WrongChangeUserInfoTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:08 MSK" name="reg" finished-at="2021-12-30T10:20:08 MSK" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withEmptyEmail()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:08 MSK" name="withEmptyEmail" finished-at="2021-12-30T10:20:13 MSK" duration-ms="5207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withEmptyEmail -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:13 MSK" name="delete" finished-at="2021-12-30T10:20:13 MSK" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:13 MSK" name="reg" finished-at="2021-12-30T10:20:14 MSK" duration-ms="290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withEmptyEmailName()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:14 MSK" name="withEmptyEmailName" finished-at="2021-12-30T10:20:14 MSK" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withEmptyEmailName -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:14 MSK" name="delete" finished-at="2021-12-30T10:20:14 MSK" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:14 MSK" name="reg" finished-at="2021-12-30T10:20:14 MSK" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withEmptyName()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:14 MSK" name="withEmptyName" finished-at="2021-12-30T10:20:15 MSK" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withEmptyName -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:15 MSK" name="delete" finished-at="2021-12-30T10:20:15 MSK" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:15 MSK" name="reg" finished-at="2021-12-30T10:20:15 MSK" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withWrongEmail()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:15 MSK" name="withWrongEmail" finished-at="2021-12-30T10:20:15 MSK" duration-ms="219" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Wrong "success" expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Wrong "success" expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongChangeUserInfoTest.withWrongEmail(WrongChangeUserInfoTest.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withWrongEmail -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:15 MSK" name="delete" finished-at="2021-12-30T10:20:15 MSK" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:15 MSK" name="reg" finished-at="2021-12-30T10:20:16 MSK" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withWrongName()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:16 MSK" name="withWrongName" finished-at="2021-12-30T10:20:16 MSK" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withWrongName -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:16 MSK" name="delete" finished-at="2021-12-30T10:20:16 MSK" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:16 MSK" name="reg" finished-at="2021-12-30T10:20:16 MSK" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withoutAvatar()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:16 MSK" name="withoutAvatar" finished-at="2021-12-30T10:20:17 MSK" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutAvatar -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:17 MSK" name="delete" finished-at="2021-12-30T10:20:17 MSK" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:17 MSK" name="reg" finished-at="2021-12-30T10:20:17 MSK" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withoutEmail()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:17 MSK" name="withoutEmail" finished-at="2021-12-30T10:20:17 MSK" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutEmail -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:17 MSK" name="delete" finished-at="2021-12-30T10:20:17 MSK" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:17 MSK" name="reg" finished-at="2021-12-30T10:20:18 MSK" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withoutName()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:18 MSK" name="withoutName" finished-at="2021-12-30T10:20:18 MSK" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutName -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:18 MSK" name="delete" finished-at="2021-12-30T10:20:18 MSK" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:18 MSK" name="reg" finished-at="2021-12-30T10:20:18 MSK" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withoutRole()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:18 MSK" name="withoutRole" finished-at="2021-12-30T10:20:24 MSK" duration-ms="5201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutRole -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:24 MSK" name="delete" finished-at="2021-12-30T10:20:24 MSK" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:24 MSK" name="reg" finished-at="2021-12-30T10:20:24 MSK" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="withoutToken()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:24 MSK" name="withoutToken" finished-at="2021-12-30T10:20:24 MSK" duration-ms="187" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
"codes" does not contain correct error code expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at WrongChangeUserInfoTest.withoutToken(WrongChangeUserInfoTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutToken -->
        <test-method is-config="true" signature="delete()[pri:0, instance:WrongChangeUserInfoTest@733c464f]" started-at="2021-12-30T10:20:24 MSK" name="delete" finished-at="2021-12-30T10:20:24 MSK" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- WrongChangeUserInfoTest -->
      <class name="DeletePostTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:DeletePostTest@77b3752b]" started-at="2021-12-30T10:20:46 MSK" name="reg" finished-at="2021-12-30T10:20:46 MSK" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="deletePostTest()[pri:0, instance:DeletePostTest@77b3752b]" started-at="2021-12-30T10:20:46 MSK" name="deletePostTest" finished-at="2021-12-30T10:20:47 MSK" duration-ms="603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePostTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:DeletePostTest@77b3752b]" started-at="2021-12-30T10:20:47 MSK" name="delete" finished-at="2021-12-30T10:20:47 MSK" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- DeletePostTest -->
      <class name="GetUserInfoTest">
        <test-method is-config="true" signature="reg()[pri:0, instance:GetUserInfoTest@604d23fa]" started-at="2021-12-30T10:20:26 MSK" name="reg" finished-at="2021-12-30T10:20:26 MSK" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="getUserInfoByIdTest()[pri:0, instance:GetUserInfoTest@604d23fa]" started-at="2021-12-30T10:20:26 MSK" name="getUserInfoByIdTest" finished-at="2021-12-30T10:20:26 MSK" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInfoByIdTest -->
        <test-method is-config="true" signature="delete()[pri:0, instance:GetUserInfoTest@604d23fa]" started-at="2021-12-30T10:20:26 MSK" name="delete" finished-at="2021-12-30T10:20:26 MSK" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method is-config="true" signature="reg()[pri:0, instance:GetUserInfoTest@604d23fa]" started-at="2021-12-30T10:20:26 MSK" name="reg" finished-at="2021-12-30T10:20:27 MSK" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="getUsers()[pri:0, instance:GetUserInfoTest@604d23fa]" started-at="2021-12-30T10:20:27 MSK" name="getUsers" finished-at="2021-12-30T10:20:27 MSK" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUsers -->
        <test-method is-config="true" signature="delete()[pri:0, instance:GetUserInfoTest@604d23fa]" started-at="2021-12-30T10:20:27 MSK" name="delete" finished-at="2021-12-30T10:20:27 MSK" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- GetUserInfoTest -->
      <class name="WrongGetUserInfoTest">
        <test-method signature="withWrongUserId()[pri:0, instance:WrongGetUserInfoTest@6637a365]" started-at="2021-12-30T10:21:17 MSK" name="withWrongUserId" finished-at="2021-12-30T10:21:17 MSK" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withWrongUserId -->
      </class> <!-- WrongGetUserInfoTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
